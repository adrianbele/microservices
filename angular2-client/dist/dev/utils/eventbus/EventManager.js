/**
 * Created by tvalentijn on 7/2/15.
 * Based on: http://csharperimage.jeremylikness.com/2012/11/building-javascript-event-aggregator.html
 */
var MessageImpl_1 = require("utils/eventbus/MessageImpl");
var EventManager = (function () {
    function EventManager() {
        this._messages = [];
        if (!EventManager.isCreating) {
            throw new Error("You can't call new in Singleton instances! Call EventManager.getInstance() instead.");
        }
    }
    EventManager.getInstance = function () {
        if (EventManager.instance == null) {
            EventManager.isCreating = true;
            EventManager.instance = new EventManager();
            EventManager.isCreating = false;
        }
        return EventManager.instance;
    };
    EventManager.prototype.subscribe = function (message, callback) {
        var msg;
        msg = this._messages[message] || (this._messages[message] = new MessageImpl_1.MessageImpl(message));
        return msg.subscribe(callback);
    };
    EventManager.prototype.unSubscribe = function (message, token) {
        if (this._messages[message]) {
            (this._messages[message]).unSubscribe(token);
        }
    };
    EventManager.prototype.publish = function (message, payload) {
        if (this._messages[message]) {
            (this._messages[message]).notify(payload);
        }
    };
    EventManager.isCreating = false;
    return EventManager;
})();
exports.EventManager = EventManager;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL2V2ZW50YnVzL0V2ZW50TWFuYWdlci50cyJdLCJuYW1lcyI6WyJFdmVudE1hbmFnZXIiLCJFdmVudE1hbmFnZXIuY29uc3RydWN0b3IiLCJFdmVudE1hbmFnZXIuZ2V0SW5zdGFuY2UiLCJFdmVudE1hbmFnZXIuc3Vic2NyaWJlIiwiRXZlbnRNYW5hZ2VyLnVuU3Vic2NyaWJlIiwiRXZlbnRNYW5hZ2VyLnB1Ymxpc2giXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUdILDRCQUEwQiw0QkFBNEIsQ0FBQyxDQUFBO0FBR3ZEO0lBTUlBO1FBSlFDLGNBQVNBLEdBQVFBLEVBQUVBLENBQUNBO1FBS3hCQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxZQUFZQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUMzQkEsTUFBTUEsSUFBSUEsS0FBS0EsQ0FBQ0EscUZBQXFGQSxDQUFDQSxDQUFDQTtRQUMzR0EsQ0FBQ0E7SUFDTEEsQ0FBQ0E7SUFFTUQsd0JBQVdBLEdBQWxCQTtRQUNJRSxFQUFFQSxDQUFDQSxDQUFDQSxZQUFZQSxDQUFDQSxRQUFRQSxJQUFJQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNoQ0EsWUFBWUEsQ0FBQ0EsVUFBVUEsR0FBR0EsSUFBSUEsQ0FBQ0E7WUFDL0JBLFlBQVlBLENBQUNBLFFBQVFBLEdBQUdBLElBQUlBLFlBQVlBLEVBQUVBLENBQUNBO1lBQzNDQSxZQUFZQSxDQUFDQSxVQUFVQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUNwQ0EsQ0FBQ0E7UUFDREEsTUFBTUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7SUFDakNBLENBQUNBO0lBRURGLGdDQUFTQSxHQUFUQSxVQUFVQSxPQUFlQSxFQUFFQSxRQUFpQ0E7UUFDeERHLElBQUlBLEdBQVlBLENBQUNBO1FBQ2pCQSxHQUFHQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFhQSxDQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxJQUFJQSx5QkFBV0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDL0ZBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBLFNBQVNBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO0lBQ25DQSxDQUFDQTtJQUVESCxrQ0FBV0EsR0FBWEEsVUFBWUEsT0FBZUEsRUFBRUEsS0FBYUE7UUFDdENJLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2hCQSxDQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFFQSxDQUFDQSxXQUFXQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQTtRQUM1REEsQ0FBQ0E7SUFDTEEsQ0FBQ0E7SUFFREosOEJBQU9BLEdBQVBBLFVBQVFBLE9BQWVBLEVBQUVBLE9BQWFBO1FBQ2xDSyxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNoQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBRUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7UUFDekRBLENBQUNBO0lBQ0xBLENBQUNBO0lBakNNTCx1QkFBVUEsR0FBV0EsS0FBS0EsQ0FBQ0E7SUFrQ3RDQSxtQkFBQ0E7QUFBREEsQ0F0Q0EsSUFzQ0M7QUF0Q1ksb0JBQVksZUFzQ3hCLENBQUEiLCJmaWxlIjoidXRpbHMvZXZlbnRidXMvRXZlbnRNYW5hZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHR2YWxlbnRpam4gb24gNy8yLzE1LlxuICogQmFzZWQgb246IGh0dHA6Ly9jc2hhcnBlcmltYWdlLmplcmVteWxpa25lc3MuY29tLzIwMTIvMTEvYnVpbGRpbmctamF2YXNjcmlwdC1ldmVudC1hZ2dyZWdhdG9yLmh0bWxcbiAqL1xuXG5pbXBvcnQge01lc3NhZ2V9IGZyb20gXCJ1dGlscy9ldmVudGJ1cy9NZXNzYWdlSW50ZXJmYWNlXCI7XG5pbXBvcnQge01lc3NhZ2VJbXBsfSBmcm9tIFwidXRpbHMvZXZlbnRidXMvTWVzc2FnZUltcGxcIjtcbmltcG9ydCB7U3Vic2NyaXB0aW9ufSBmcm9tIFwidXRpbHMvZXZlbnRidXMvU3Vic2NyaXB0aW9uXCI7XG5cbmV4cG9ydCBjbGFzcyBFdmVudE1hbmFnZXIge1xuXG4gICAgcHJpdmF0ZSBfbWVzc2FnZXM6IGFueSA9IFtdO1xuICAgIHN0YXRpYyBpbnN0YW5jZTogRXZlbnRNYW5hZ2VyO1xuICAgIHN0YXRpYyBpc0NyZWF0aW5nOkJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBpZiAoIUV2ZW50TWFuYWdlci5pc0NyZWF0aW5nKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgY2FuJ3QgY2FsbCBuZXcgaW4gU2luZ2xldG9uIGluc3RhbmNlcyEgQ2FsbCBFdmVudE1hbmFnZXIuZ2V0SW5zdGFuY2UoKSBpbnN0ZWFkLlwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcbiAgICAgICAgaWYgKEV2ZW50TWFuYWdlci5pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBFdmVudE1hbmFnZXIuaXNDcmVhdGluZyA9IHRydWU7XG4gICAgICAgICAgICBFdmVudE1hbmFnZXIuaW5zdGFuY2UgPSBuZXcgRXZlbnRNYW5hZ2VyKCk7XG4gICAgICAgICAgICBFdmVudE1hbmFnZXIuaXNDcmVhdGluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBFdmVudE1hbmFnZXIuaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgc3Vic2NyaWJlKG1lc3NhZ2U6IHN0cmluZywgY2FsbGJhY2s6IChwYXlsb2FkPzogYW55KSA9PiB2b2lkICkge1xuICAgICAgICB2YXIgbXNnOiBNZXNzYWdlO1xuICAgICAgICBtc2cgPSB0aGlzLl9tZXNzYWdlc1ttZXNzYWdlXSB8fCA8TWVzc2FnZT4odGhpcy5fbWVzc2FnZXNbbWVzc2FnZV0gPSBuZXcgTWVzc2FnZUltcGwobWVzc2FnZSkpO1xuICAgICAgICByZXR1cm4gbXNnLnN1YnNjcmliZShjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgdW5TdWJzY3JpYmUobWVzc2FnZTogc3RyaW5nLCB0b2tlbjogbnVtYmVyKSB7XG4gICAgICAgIGlmICh0aGlzLl9tZXNzYWdlc1ttZXNzYWdlXSkge1xuICAgICAgICAgICAgKDxNZXNzYWdlPih0aGlzLl9tZXNzYWdlc1ttZXNzYWdlXSkpLnVuU3Vic2NyaWJlKHRva2VuKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1Ymxpc2gobWVzc2FnZTogc3RyaW5nLCBwYXlsb2FkPzogYW55KSB7XG4gICAgICAgIGlmICh0aGlzLl9tZXNzYWdlc1ttZXNzYWdlXSkge1xuICAgICAgICAgICAgKDxNZXNzYWdlPih0aGlzLl9tZXNzYWdlc1ttZXNzYWdlXSkpLm5vdGlmeShwYXlsb2FkKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==